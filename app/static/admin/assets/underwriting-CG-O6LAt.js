import{g as n,p as u,a as g,d,r as i}from"./index-CMftDAuZ.js";const p={getRules:async e=>{var r,t,a;console.log("[API] 开始获取规则列表, 参数:",e);try{const o=await n("/api/v1/underwriting/rules",{params:e});return console.log("[API] 获取规则列表成功:",{code:o.code,message:o.message,dataLength:(t=(r=o.data)==null?void 0:r.list)==null?void 0:t.length,total:(a=o.data)==null?void 0:a.total}),o}catch(o){throw console.error("[API] 获取规则列表失败:",o),o}},getRuleDetail:async e=>{var r,t;console.log("[API] 开始获取规则详情, ID:",e);try{const a=await n(`/api/v1/underwriting/rules/${e}`);return console.log("[API] 获取规则详情成功:",{code:a.code,message:a.message,ruleId:(r=a.data)==null?void 0:r.id,ruleName:(t=a.data)==null?void 0:t.name}),a}catch(a){throw console.error("[API] 获取规则详情失败:",a),a}},createRule:e=>u("/api/v1/underwriting/rules",e,{loading:!0,toast:!0}),updateRule:(e,r)=>g(`/api/v1/underwriting/rules/${e}`,r,{loading:!0,toast:!0}),deleteRule:e=>d(`/api/v1/underwriting/rules/${e}`,{loading:!0,toast:!0}),importRuleData:(e,r)=>{console.log("[API] 开始导入规则数据:",{ruleId:e,fileName:r.name,fileSize:r.size});const t=new FormData;return t.append("file",r),u(`/api/v1/underwriting/rules/${e}/import`,t,{headers:{"Content-Type":"multipart/form-data"},loading:!0,toast:!0})},exportRuleData:e=>n(`/api/v1/underwriting/rules/${e}/export`,{responseType:"blob",loading:!0,toast:!0}),getDiseaseCategories:async e=>{var r;console.log("[API] 开始获取规则关联的疾病大类, ruleId:",e);try{const t=await n(`/api/v1/underwriting/rules/${e}/disease-categories`);return console.log("[API] 获取规则关联的疾病大类成功:",{code:t.code,message:t.message,categoriesCount:(r=t.data)==null?void 0:r.length}),t}catch(t){throw console.error("[API] 获取规则关联的疾病大类失败:",t),t}},getDiseases:async e=>{var r;console.log("[API] 开始获取规则关联的疾病列表, ruleId:",e);try{const t=await n(`/api/v1/underwriting/rules/${e}/diseases`);return console.log("[API] 获取规则关联的疾病列表成功:",{code:t.code,message:t.message,diseasesCount:(r=t.data)==null?void 0:r.length}),t}catch(t){throw console.error("[API] 获取规则关联的疾病列表失败:",t),t}},getRuleQuestions:e=>n(`/api/v1/underwriting/rules/${e}/questions`,{loading:!0,toast:!0}),getRuleAnswers:e=>n(`/api/v1/underwriting/rules/${e}/answers`,{loading:!0,toast:!0})},m=async e=>{console.log("开始获取参数列表, 参数:",e);try{const r=await i.get("/api/v1/underwriting/ai-parameter/",{params:e,headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}});return console.log("获取参数列表成功:",r),r.data}catch(r){throw console.error("获取参数列表失败:",r),r}},h=async()=>{console.log("开始获取参数类型列表");try{const e=await i.get("/api/v1/underwriting/ai-parameter/types",{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}});return console.log("获取参数类型列表成功:",e),e.data}catch(e){throw console.error("获取参数类型列表失败:",e),e}},w=async()=>{var e,r,t,a,o;try{const s=await i.get("/api/v1/underwriting/rules",{params:{pageSize:1e3},headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}});return((e=s.data)==null?void 0:e.code)===200&&((t=(r=s.data)==null?void 0:r.data)!=null&&t.list)?{code:200,message:"获取规则列表成功",data:s.data.data.list.map(l=>({id:l.id,name:l.name}))}:{code:((a=s.data)==null?void 0:a.code)||500,message:((o=s.data)==null?void 0:o.message)||"获取规则列表失败",data:[]}}catch(s){return console.error("获取规则列表失败:",s),{code:500,message:s instanceof Error?s.message:"获取规则列表失败",data:[]}}},y=e=>i.get(`/api/v1/underwriting/ai-parameter/${e}`,{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}}),A=e=>{const r={...e,parameter_type_id:e.parameter_type_id?Number(e.parameter_type_id):void 0,rule_id:e.rule_id?Number(e.rule_id):void 0,status:"enabled"};return console.log("发起创建参数请求, 数据:",{url:"/api/v1/underwriting/ai-parameter/",method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},data:r}),i.post("/api/v1/underwriting/ai-parameter/",r,{headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`}})},I=(e,r)=>i.put(`/api/v1/underwriting/ai-parameter/${e}`,r,{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}}),P=e=>i.delete(`/api/v1/underwriting/ai-parameter/${e}`,{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}});export{h as a,w as b,A as c,P as d,y as e,m as g,p as r,I as u};
//# sourceMappingURL=underwriting-CG-O6LAt.js.map
