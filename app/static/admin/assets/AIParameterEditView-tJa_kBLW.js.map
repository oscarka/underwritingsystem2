{"version":3,"file":"AIParameterEditView-tJa_kBLW.js","sources":["../../src/views/underwriting/AIParameterEditView.vue"],"sourcesContent":["# 智核参数编辑页面\n<template>\n  <div class=\"ai-parameter-edit-page\">\n    <!-- 页面标题 -->\n    <div class=\"page-header\">\n      <div class=\"header-left\">\n        <BaseButton @click=\"router.back()\">返回</BaseButton>\n        <h1>{{ isEdit ? '编辑智核参数' : '新增智核参数' }}</h1>\n      </div>\n      <div class=\"header-actions\">\n        <BaseButton @click=\"handleCancel\">取消</BaseButton>\n        <BaseButton type=\"primary\" @click=\"handleSave\">保存</BaseButton>\n      </div>\n    </div>\n\n    <!-- 表单内容 -->\n    <div class=\"form-container\">\n      <BaseForm ref=\"form\" :model=\"formData\" label-width=\"120px\">\n        <BaseFormItem label=\"参数名称\" required>\n          <BaseInput\n            v-model=\"formData.name\"\n            placeholder=\"请输入参数名称\"\n            :maxlength=\"100\"\n          />\n        </BaseFormItem>\n\n        <BaseFormItem label=\"参数类型\" required>\n          <BaseSelect\n            v-model=\"formData.parameter_type_id\"\n            placeholder=\"请选择参数类型\"\n          >\n            <option value=\"\" disabled>请选择参数类型</option>\n            <option\n              v-for=\"type in parameterTypes\"\n              :key=\"type.id\"\n              :value=\"type.id\"\n            >\n              {{ type.name }}\n            </option>\n          </BaseSelect>\n        </BaseFormItem>\n\n        <BaseFormItem label=\"核保规则\" required>\n          <BaseSelect\n            v-model=\"formData.rule_id\"\n            placeholder=\"请选择核保规则\"\n          >\n            <option value=\"\" disabled>请选择核保规则</option>\n            <option\n              v-for=\"rule in rules\"\n              :key=\"rule.id\"\n              :value=\"rule.id\"\n            >\n              {{ rule.name }}\n            </option>\n          </BaseSelect>\n        </BaseFormItem>\n\n        <BaseFormItem label=\"参数值\" required>\n          <BaseInput\n            v-model=\"formData.value\"\n            type=\"textarea\"\n            placeholder=\"请输入参数值\"\n            :maxlength=\"500\"\n            :rows=\"4\"\n          />\n        </BaseFormItem>\n\n        <BaseFormItem label=\"参数描述\">\n          <BaseInput\n            v-model=\"formData.description\"\n            type=\"textarea\"\n            placeholder=\"请输入参数描述\"\n            :maxlength=\"500\"\n            :rows=\"4\"\n          />\n        </BaseFormItem>\n      </BaseForm>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, computed } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useMessage } from '@/composables/useMessage'\nimport {\n  getParameter,\n  getParameterTypes,\n  getRules,\n  createParameter,\n  updateParameter\n} from '@/api/underwriting'\nimport type { Parameter, ParameterType } from '@/types/underwriting'\n\nconst router = useRouter()\nconst route = useRoute()\nconst message = useMessage()\n\n// 是否是编辑模式\nconst isEdit = computed(() => route.params.id !== undefined)\n\n// 表单数据\nconst formData = ref({\n  name: '',\n  parameter_type_id: undefined as number | undefined,\n  rule_id: undefined as number | undefined,\n  value: '',\n  description: undefined as string | undefined\n})\n\n// 下拉选项数据\nconst parameterTypes = ref<ParameterType[]>([])\nconst rules = ref<{ id: number; name: string }[]>([])\n\n// 获取参数类型列表\nconst loadParameterTypes = async () => {\n  try {\n    const res = await getParameterTypes()\n    parameterTypes.value = res.data\n  } catch (error) {\n    console.error('获取参数类型失败:', error)\n    message.error('获取参数类型失败')\n  }\n}\n\n// 获取规则列表\nconst loadRules = async () => {\n  try {\n    const res = await getRules()\n    rules.value = res.data\n  } catch (error) {\n    console.error('获取规则列表失败:', error)\n    message.error('获取规则列表失败')\n  }\n}\n\n// 加载参数详情\nconst loadParameterDetail = async () => {\n  if (!isEdit.value) return\n  try {\n    const res = await getParameter(Number(route.params.id))\n    const paramData = res.data as Parameter\n    formData.value = {\n      name: paramData.name,\n      parameter_type_id: paramData.parameter_type_id,\n      rule_id: paramData.rule_id,\n      value: paramData.value,\n      description: paramData.description\n    }\n  } catch (error) {\n    console.error('获取参数详情失败:', error)\n    message.error('获取参数详情失败')\n  }\n}\n\n// 表单验证\nconst validateForm = () => {\n  const { name, parameter_type_id, rule_id, value } = formData.value\n  const errors = []\n\n  if (!name?.trim()) {\n    errors.push('参数名称不能为空')\n  } else if (name.length > 100) {\n    errors.push('参数名称不能超过100个字符')\n  }\n\n  if (!parameter_type_id) {\n    errors.push('参数类型不能为空')\n  }\n\n  if (!rule_id) {\n    errors.push('核保规则不能为空')\n  }\n\n  if (!value?.trim()) {\n    errors.push('参数值不能为空')\n  } else if (value.length > 500) {\n    errors.push('参数值不能超过500个字符')\n  }\n\n  const description = formData.value.description\n  if (description && description.length > 500) {\n    errors.push('参数描述不能超过500个字符')\n  }\n\n  if (errors.length > 0) {\n    errors.forEach(error => message.error(error))\n    return false\n  }\n\n  // 确保类型正确\n  formData.value.parameter_type_id = Number(parameter_type_id)\n  formData.value.rule_id = Number(rule_id)\n  \n  return true\n}\n\n// 保存\nconst handleSave = async () => {\n  if (!validateForm()) return\n\n  try {\n    console.log('准备保存数据:', formData.value)\n    \n    // 处理数据类型\n    const submitData = {\n      ...formData.value,\n      parameter_type_id: Number(formData.value.parameter_type_id),\n      rule_id: Number(formData.value.rule_id),\n      status: 'enabled'  // 设置默认状态\n    }\n    \n    console.log('处理后的提交数据:', submitData)\n    \n    if (isEdit.value) {\n      const res = await updateParameter(Number(route.params.id), submitData)\n      if (res.code === 200) {\n        message.success('更新成功')\n        router.push({\n          path: '/underwriting/ai-parameter',\n          query: { refresh: Date.now().toString() }\n        })\n      } else {\n        throw new Error(res.message || '更新失败')\n      }\n    } else {\n      const res = await createParameter(submitData)\n      if (res.code === 200) {\n        message.success('创建成功')\n        router.push({\n          path: '/underwriting/ai-parameter',\n          query: { refresh: Date.now().toString() }\n        })\n      } else {\n        throw new Error(res.message || '创建失败')\n      }\n    }\n  } catch (error: any) {\n    console.error('保存失败:', error)\n    message.error(error.response?.data?.message || error.message || '保存失败')\n  }\n}\n\n// 取消\nconst handleCancel = () => {\n  router.back()\n}\n\nonMounted(() => {\n  loadParameterTypes()\n  loadRules()\n  loadParameterDetail()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.ai-parameter-edit-page {\n  padding: 20px;\n\n  .page-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n\n    .header-left {\n      display: flex;\n      align-items: center;\n      gap: 16px;\n\n      h1 {\n        margin: 0;\n        font-size: 24px;\n      }\n    }\n\n    .header-actions {\n      display: flex;\n      gap: 12px;\n    }\n  }\n\n  .form-container {\n    padding: 24px;\n    background: #fff;\n    border-radius: 4px;\n  }\n}\n</style> "],"names":["router","useRouter","route","useRoute","message","useMessage","isEdit","computed","formData","ref","parameterTypes","rules","loadParameterTypes","res","getParameterTypes","error","loadRules","getRules","loadParameterDetail","paramData","getParameter","validateForm","name","parameter_type_id","rule_id","value","errors","description","handleSave","submitData","updateParameter","createParameter","_b","_a","handleCancel","onMounted"],"mappings":"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"}